KeyW main
lCurly {
var a
operator :=
num 1 
operator ;
var b
operator :=
num 2 
operator ;
var c
operator :=
KeyW add
lPar (
var a
comma ,
var b
rPar )
operator ;
var d
operator :=
num 6 
operator ;
KeyW if
lPar (
KeyW eq
lPar (
var a
comma ,
var b
rPar )
rPar )
KeyW then
lCurly {
KeyW output
operator :=
var a
operator ;
rCurly }
KeyW else
lCurly {
KeyW if
lPar (
KeyW eq
lPar (
var c
comma ,
var d
rPar )
rPar )
KeyW then
lCurly {
KeyW if
lPar (
KeyW eq
lPar (
var c
comma ,
var d
rPar )
rPar )
KeyW then
lCurly {
KeyW if
lPar (
KeyW eq
lPar (
var c
comma ,
var d
rPar )
rPar )
KeyW then
lCurly {
KeyW if
lPar (
KeyW eq
lPar (
var c
comma ,
var d
rPar )
rPar )
KeyW then
lCurly {
KeyW output
operator :=
var d
operator ;
rCurly }
operator ;
rCurly }
operator ;
rCurly }
operator ;
rCurly }
operator ;
rCurly }
operator ;
KeyW halt
operator ;
KeyW num
var a
operator ;
KeyW num
var b
operator ;
KeyW num
var c
operator ;
KeyW num
var d
operator ;
rCurly }
